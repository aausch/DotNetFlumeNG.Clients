// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen.exe, version 0.9.0.0
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace org.apache.flume.source.avro
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using Avro;
	using Avro.Specific;
	
	/// <summary>
	/// * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.
	/// </summary>
	public abstract class AvroSourceProtocol : Avro.Specific.ISpecificProtocol
	{
		private static readonly Avro.Protocol protocol = Avro.Protocol.Parse("{\r\n  \"protocol\": \"AvroSourceProtocol\",\r\n  \"namespace\": \"org.apache.flume.source.a" +
				"vro\",\r\n  \"doc\": \"* Licensed to the Apache Software Foundation (ASF) under one\\\\r" +
				"\\\\n * or more contributor license agreements.  See the NOTICE file\\\\r\\\\n * distr" +
				"ibuted with this work for additional information\\\\r\\\\n * regarding copyright own" +
				"ership.  The ASF licenses this file\\\\r\\\\n * to you under the Apache License, Ver" +
				"sion 2.0 (the\\\\r\\\\n * \\\\\\\"License\\\\\\\"); you may not use this file except in comp" +
				"liance\\\\r\\\\n * with the License.  You may obtain a copy of the License at\\\\r\\\\n " +
				"*\\\\r\\\\n * http://www.apache.org/licenses/LICENSE-2.0\\\\r\\\\n *\\\\r\\\\n * Unless requ" +
				"ired by applicable law or agreed to in writing,\\\\r\\\\n * software distributed und" +
				"er the License is distributed on an\\\\r\\\\n * \\\\\\\"AS IS\\\\\\\" BASIS, WITHOUT WARRANT" +
				"IES OR CONDITIONS OF ANY\\\\r\\\\n * KIND, either express or implied.  See the Licen" +
				"se for the\\\\r\\\\n * specific language governing permissions and limitations\\\\r\\\\n" +
				" * under the License.\",\r\n  \"types\": [\r\n    {\r\n      \"type\": \"enum\",\r\n      \"name" +
				"\": \"Status\",\r\n      \"namespace\": \"org.apache.flume.source.avro\",\r\n      \"symbols" +
				"\": [\r\n        \"OK\",\r\n        \"FAILED\",\r\n        \"UNKNOWN\"\r\n      ]\r\n    },\r\n    " +
				"{\r\n      \"type\": \"record\",\r\n      \"name\": \"AvroFlumeEvent\",\r\n      \"namespace\": " +
				"\"org.apache.flume.source.avro\",\r\n      \"fields\": [\r\n        {\r\n          \"name\":" +
				" \"headers\",\r\n          \"type\": {\r\n            \"type\": \"map\",\r\n            \"value" +
				"s\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"body\",\r\n   " +
				"       \"type\": \"bytes\"\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  \"messages\": {\r\n    \"a" +
				"ppend\": {\r\n      \"request\": [\r\n        {\r\n          \"name\": \"event\",\r\n          " +
				"\"type\": \"AvroFlumeEvent\"\r\n        }\r\n      ],\r\n      \"response\": \"Status\"\r\n    }" +
				",\r\n    \"appendBatch\": {\r\n      \"request\": [\r\n        {\r\n          \"name\": \"event" +
				"s\",\r\n          \"type\": {\r\n            \"type\": \"array\",\r\n            \"items\": \"Av" +
				"roFlumeEvent\"\r\n          }\r\n        }\r\n      ],\r\n      \"response\": \"Status\"\r\n   " +
				" }\r\n  }\r\n}");
		public Avro.Protocol Protocol
		{
			get
			{
				return protocol;
			}
		}
		public void Request(Avro.Specific.ICallbackRequestor requestor, string messageName, object[] args, object callback)
		{
			switch(messageName)
			{
				case "append":
				requestor.Request<org.apache.flume.source.avro.Status>(messageName, args, callback);
				break;

				case "appendBatch":
				requestor.Request<org.apache.flume.source.avro.Status>(messageName, args, callback);
				break;
			};
		}
		public abstract org.apache.flume.source.avro.Status append(org.apache.flume.source.avro.AvroFlumeEvent @event);
		public abstract org.apache.flume.source.avro.Status appendBatch(IList<org.apache.flume.source.avro.AvroFlumeEvent> events);
	}
}
